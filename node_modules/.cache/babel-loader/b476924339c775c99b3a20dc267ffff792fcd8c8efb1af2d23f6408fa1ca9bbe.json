{"ast":null,"code":"var _jsxFileName = \"/Users/candelachaves/Documents/React/react-addon-week1/src/Meaning.js\";\nimport React from \"react\";\nimport \"./Meaning.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meaning(props) {\n  console.log(props.meaning);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Meaning\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"partOfSpeech\",\n      children: props.meaning.partOfSpeech\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"definitions\",\n      children: props.meaning.definitions.map(function (definition, index) {\n        if (index === 0) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: definition.definition\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 20\n          }, this);\n        } else {\n          return null;\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Synonyms, {\n      synonyms: props.meaning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = Meaning;\nvar _c;\n$RefreshReg$(_c, \"Meaning\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Meaning","props","console","log","meaning","className","children","partOfSpeech","fileName","_jsxFileName","lineNumber","columnNumber","definitions","map","definition","index","Synonyms","synonyms","_c","$RefreshReg$"],"sources":["/Users/candelachaves/Documents/React/react-addon-week1/src/Meaning.js"],"sourcesContent":["import React from \"react\";\nimport \"./Meaning.css\";\n\nexport default function Meaning(props) {\n  console.log(props.meaning);\n  return (\n    <div className=\"Meaning\">\n      <div className=\"partOfSpeech\">{props.meaning.partOfSpeech}</div>\n      <div className=\"definitions\">\n        {props.meaning.definitions.map(function (definition, index) {\n          if (index === 0) {\n            return <div key={index}>{definition.definition}</div>;\n          } else {\n            return null;\n          }\n        })}\n      </div>\n      <Synonyms synonyms={props.meaning} />\n    </div>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,eAAe,SAASC,OAAOA,CAACC,KAAK,EAAE;EACrCC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;EAC1B,oBACEL,OAAA;IAAKM,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBP,OAAA;MAAKM,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAEL,KAAK,CAACG,OAAO,CAACG;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAChEZ,OAAA;MAAKM,SAAS,EAAC,aAAa;MAAAC,QAAA,EACzBL,KAAK,CAACG,OAAO,CAACQ,WAAW,CAACC,GAAG,CAAC,UAAUC,UAAU,EAAEC,KAAK,EAAE;QAC1D,IAAIA,KAAK,KAAK,CAAC,EAAE;UACf,oBAAOhB,OAAA;YAAAO,QAAA,EAAkBQ,UAAU,CAACA;UAAU,GAA7BC,KAAK;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA8B,CAAC;QACvD,CAAC,MAAM;UACL,OAAO,IAAI;QACb;MACF,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNZ,OAAA,CAACiB,QAAQ;MAACC,QAAQ,EAAEhB,KAAK,CAACG;IAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEV;AAACO,EAAA,GAjBuBlB,OAAO;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}