{"ast":null,"code":"var _jsxFileName = \"/Users/candelachaves/Documents/React/react-addon-week1/src/Meaning.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./Meaning.css\";\nimport Synonyms from \"./Synonyms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meaning(props) {\n  _s();\n  const [synonyms, setSynonyms] = useState(null);\n  console.log(props.meaning);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Meaning\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"partOfSpeech\",\n      children: props.meaning.partOfSpeech\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"definitions\",\n      children: props.meaning.definitions.map(function (definition, index) {\n        if (index === 0) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", definition.definition]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 20\n          }, this);\n        } else {\n          return null;\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Synonyms, {\n      synonyms: \"synonyms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_s(Meaning, \"YEvSllry/xwu0c1acC91u1QtBRI=\");\n_c = Meaning;\nvar _c;\n$RefreshReg$(_c, \"Meaning\");","map":{"version":3,"names":["React","Synonyms","jsxDEV","_jsxDEV","Meaning","props","_s","synonyms","setSynonyms","useState","console","log","meaning","className","children","partOfSpeech","fileName","_jsxFileName","lineNumber","columnNumber","definitions","map","definition","index","_c","$RefreshReg$"],"sources":["/Users/candelachaves/Documents/React/react-addon-week1/src/Meaning.js"],"sourcesContent":["import React from \"react\";\nimport \"./Meaning.css\";\nimport Synonyms from \"./Synonyms\";\n\nexport default function Meaning(props) {\n  const [synonyms, setSynonyms] = useState(null);\n  console.log(props.meaning);\n  return (\n    <div className=\"Meaning\">\n      <div className=\"partOfSpeech\">{props.meaning.partOfSpeech}</div>\n      <div className=\"definitions\">\n        {props.meaning.definitions.map(function (definition, index) {\n          if (index === 0) {\n            return <div key={index}> {definition.definition}</div>;\n          } else {\n            return null;\n          }\n        })}\n      </div>\n      <Synonyms synonyms=\"synonyms\" />\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;AACtB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,eAAe,SAASC,OAAOA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACrC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EAC9CC,OAAO,CAACC,GAAG,CAACN,KAAK,CAACO,OAAO,CAAC;EAC1B,oBACET,OAAA;IAAKU,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBX,OAAA;MAAKU,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAET,KAAK,CAACO,OAAO,CAACG;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAChEhB,OAAA;MAAKU,SAAS,EAAC,aAAa;MAAAC,QAAA,EACzBT,KAAK,CAACO,OAAO,CAACQ,WAAW,CAACC,GAAG,CAAC,UAAUC,UAAU,EAAEC,KAAK,EAAE;QAC1D,IAAIA,KAAK,KAAK,CAAC,EAAE;UACf,oBAAOpB,OAAA;YAAAW,QAAA,GAAiB,GAAC,EAACQ,UAAU,CAACA,UAAU;UAAA,GAA9BC,KAAK;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA+B,CAAC;QACxD,CAAC,MAAM;UACL,OAAO,IAAI;QACb;MACF,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNhB,OAAA,CAACF,QAAQ;MAACM,QAAQ,EAAC;IAAU;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEV;AAACb,EAAA,CAlBuBF,OAAO;AAAAoB,EAAA,GAAPpB,OAAO;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}